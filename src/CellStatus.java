/**
 * 单元格在游戏中会有不同的状态。这些状态可以使用：
 * 1.整型变量表示（比如1、2），但是这样表示状态可读性不高；
 * 2.字符串值表示（比如“correct”等）,这样表示状态则在比较时需要考虑字符串的大小写等问题。
 * 在类似的场景中，建议定义枚举类型完成此类工作，枚举类型的可读性高，且是类型安全。
 */
public enum CellStatus {
    GIVEN,         // 具有此状态的单元格表示其包含的数字是预先给定的；
    TO_GUESS,      // 具有此状态的单元格是不包含任何数字，需要游戏玩家进行填充的；
    CORRECT_GUESS, // 具有此状态的单元格表明游戏玩家正确填充了其应该包含的数字；
    WRONG_GUESS    // 具有此状态的单元格表明游戏玩家错误填充了其应该包含的数字。
    // 一场游戏是否成功结束的判断条件就是没有任何一个单元格的状态是TO_GUESS或者WRONG_GUESS
}
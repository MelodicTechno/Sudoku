@startuml
'https://plantuml.com/class-diagram
left to right direction

JFrame -r-|> SudokuMain

class GameBoardPanel {
- CELL_SIZE: int
- BOARD_WIDTH: int
- BOARD_HEIGHT: int
- cells: Cell[][]
- puzzle: Puzzle
- listener: CellInputListener
- numOfToBeFilled: int
- numOfWromgGuess: int
- difficulty: GameDifficulty
- state: SudokuState
- statePanel: StatePanel
- main: SudokuMain
+ GameBoardPanel(GameDifficulty)
+ newGame(void): void
+ newGame(GameDifficulty): void
+ isSolved(void): boolean
+ getCells(void): Cell[][]
+ getNumOfToBeFilled(void): int
+ getDifficulty(void): GameDifficulty
+ getState(void): SudokuState
+ setStatePanel(StatePanel): void
+ getStatePanel(void): StatePanel
+ setMain(SudokuMain): void
+ getMain(void): SudokuMain
}

class SudokuMain {
- difficulty: GameDifficulty
- menu: SudokuMenuBar
- board: GameBoardPanel
+ SudokuMain()
+ SudokuMain(Difficulty)
+ setDifficulty(GameDifficulty difficulty)
+ getDifficulty(void): GameDifficulty
+ reset(void): void
+ setBoard(GameBoardPanel): void
}

Cell -u-|> JTextField
Cell -u-* Color

class Cell {
- BG_GIVEN: Color
- FG_GIVEN: Color
- FG_NOT_GIVEN: Color
- BG_TO_GUESS: Color
- BG_CORRECT_GUESS: Color
- BG_WRONG_GUESS: Color
- FONT_NUMBERS: Font
- row: int
- col: int
- number: int
- status: CellStatus
+ Cell(int row, int col)
+ newGame(int, boolean): void
+ paint(void): void
+ makeBorder(void): void
}

class CellData {
- data: int[][]
- isGivenMatrix: boolean[][]
- COL_SIZE: int
- ROW_SIZE: int
+ CellData()
+ generateInitialData(void): void
+ getData(void): int[][]
+ checkColumn(int, int): boolean
+ checkRow (int, int): boolean
+ checkNine(int, int, int): boolean
+ public void shuffle()
+ public boolean[][] getIsGiven(GameDifficulty difficulty)
+ public boolean[][] getIsGiven(int cellsToGuess)
}

CellInputListener .l.|> ActionListener

CellInputListener -u-* gameBoard

class CellInputListener {
+ gameBoard: GameBoardPanel
+ CellInputListener(GameBoardPanel)
+ actionPerformed(ActionEvent)
+ processInput(String): boolean
}

enum CellStatus {
- GIVEN
- TO_GUESS
- CORRECT_GUESS
- WRONG_GUESS
}

DifficultyButton -u-|> JButton

DifficultyButton -d-* GameDifficulty

class DifficultyButton {
difficulty: GameDifficulty
DifficultyButton(String)
getDifficulty(void): GameDifficulty
}

GameBoardPanel -u-|> JPanel
GameBoardPanel -l-* Cell
GameBoardPanel -u-* Puzzle
GameBoardPanel -r-* CellInputListener
GameBoardPanel -u-* GameDifficulty
GameBoardPanel -d-* SudokuState
GameBoardPanel -l-* StatePanel



enum GameDifficulty {
- EASY
- INTERMEDIATE
- DIFFICULT
}

MenuListener ..|> ActionListener
MenuListener -* SudokuMenuBar

class MenuListener {
menuBar: SudokuMenuBar
MenuListener(SudokuMenuBar)
actionPerformed(ActionEvent): void
}

class Puzzle {
numbers: int[][]
isGiven: boolean[][]
newPuzzle(int): void
newPuzzle(GameDifficulty): void
}

StatePanel -d-|> JPanel
StatePanel -d-* SudokuState
StatePanel -u-* GameBoardPanel
StatePanel -d-* SudokuTimer

class StatePanel {
- WIDTH: int
- state: SudokuState
- board: GameBoardPanel
- timer: SudokuTimer
+ StatePanel(GameBoardPanel)
+ getState(void): SudokuState
+ getTimer(void): SudokuTimer
}

class SudokuConstants {
- GRID_SIZE: int = 9
- WINDOW_SIZE: int = 9 * 9
- EXIT: String = "exit"
- RESET_GAME: String = "reset game"
- NEW_GAME: String = "new game"
+ difficultyToNumToGuess(GameDifficulty): int
}

SudokuDialog -l-|> JDialog
class SudokuDialog {
+ SudokuDialog(JFrame, String)
}

SudokuMenuBar -u-|> JMenuBar

class SudokuMenuBar {
- frame: JFrame
- listener: MenuListener
- resetGame: JMenuItem
+ SudokuMenuBar(JFrame)
+ getFrame(void): JFrame
+ getResetGame(void): JMenuItem
}

SudokuMenuItem -u-|> JMenuItem

class SudokuMenuItem {
- usage: String
+ SudokuMenuItem(String, String)
+ getUsage(void): String
}

SudokuState -u-* GameBoardPanel

class SudokuState {
BG_GIVEN: Color
STATE_FONT: Font
numOfToBeFilled: int
Panelboard: GameBoard
SudokuState(GameBoardPanel): void
newState(GameBoardPanel): void
paint(): void
}

SudokuState -l-|> JLabel
SudokuState -u-* Color
SudokuState -r-* Font
SudokuState -d-* Thread

class SudokuTimer {
- BG_GIVEN: Color
- FG_GIVEN: Color
- STATE_FONT: Font
- currentTime: String
- initialTime: long
- thread: CountingThread
+ SudokuTimer(void)
+ stop(void): void
+ getCurrentTime(void): String
}

CountingThread -u-|> Thread

class CountingThread {
- stopped: boolean
- CountingThread(void)
+ void run()
+ format(long): String
}

WelcomeListener -u-|> ActionListener
WelcomeListener -u-* WelcomePanel
WelcomeListener -u-* Container
WelcomeListener -l-* SudokuMain

class WelcomeListener {
- welcomePage: WelcomePanel
- cp: Container
- main: SudokuMain
+ WelcomeListener(WelcomePanel)
+ WelcomeListener(WelcomePanel, Container, SudokuMain)
+ actionPerformed(ActionEvent): void
}

WelcomePanel -u-|> JPanel

class WelcomePanel {
- CELL_SIZE: int = 60
- BOARD_WIDTH: int
- BOARD_HEIGHT: int
- chooseDifficulty: JLabel
- dificulties: DifficultyButton[]
- listener: WelcomeListener
- cp: Container
- board: GameBoardPanel
- main: SudokuMain
- welcomeFont: Font
+ WelcomePanel(Container, SudokuMain)
}

@enduml